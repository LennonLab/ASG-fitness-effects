stn.long <- as.data.frame(pivot_longer(strain, cols = everything(),
names_to = "Well", values_to = "Strain"))
inf.long <- as.data.frame(pivot_longer(infection, cols = everything(),
names_to = "Well", values_to = "Infection"))
# Prepare the OD data for merging
OD.long <- data %>%
pivot_longer(cols = -Time, names_to="Well", values_to="OD600")
str(OD.long)
#combine
OD.long$Media<-rep(med.long$Media, length.out=nrow(OD.long))
OD.long$Strain<-rep(stn.long$Strain, length.out=nrow(OD.long))
OD.long$Infection<-rep(inf.long$Infection, length.out=nrow(OD.long))
#filter out "Blanks"
summary<-OD.long[!apply(OD.long, 1, function(row) any(row=="Blank")), ]
#it worked!!
# Get unique combinations of Media, Infection, and Strain
combinations <- summary %>%
distinct(Media, Infection, Strain)
# Create data frames for each combination
for (i in 1:nrow(combinations)) {
strain <- combinations$Strain[i]
media <- combinations$Media[i]
infection <- combinations$Infection[i]
vector_name <- paste(strain, media, infection, sep = ".")
assign(vector_name, summary %>%
filter(Strain == strain, Media == media, Infection == infection) %>%
select(Time, OD600))
}
# Calculate the average OD600 for each time point for wt strains
wt_combinations <- combinations %>%
filter(grepl("WT", Strain))
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE) * 4)
assign(avg_vector_name, avg_vector)
}
# Ensure non_wt_combinations is created correctly
non_wt_combinations <- combinations %>%
filter(!grepl("WT", Strain))
fitness_list <- list()
for (i in 1:nrow(non_wt_combinations)) {
strain <- non_wt_combinations$Strain[i]
media <- non_wt_combinations$Media[i]
infection <- non_wt_combinations$Infection[i]
non_wt_vector_name <- paste(strain, media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
fitness_vector_name <- paste(media, strain, infection, "fitness", sep = ".")
fitness_vector <- get(non_wt_vector_name)$OD600 - get(avg_vector_name)$avg_OD600
assign(fitness_vector_name, fitness_vector)
fitness_list[[fitness_vector_name]] <- fitness_vector
}
# Sum all fitness vectors into one data frame named pm
pm <- data.frame(
media = character(),
strain = character(),
infection = character(),
fitness_value = numeric()
)
for (name in names(fitness_list)) {
parts <- strsplit(name, "\\.")[[1]]
media <- parts[1]
strain <- parts[2]
infection <- parts[3]
fitness_value <- sum(fitness_list[[name]])
pm <- rbind(pm, data.frame(media = media, strain = strain, infection = infection, fitness_value = fitness_value))
}
# Create the media.strain.infection variable manually
pm$media.strain.infection <- paste(pm$media, pm$strain, pm$infection, sep = ".")
# Plot fitness
plot.new()
bg <- ggplot(pm, aes(x = media.strain.infection, y = fitness_value)) +
geom_bar(stat = "identity") +
labs(title = "Fitness effects of sporulation mutations", x = "Media.Strain.Infection", y = "Fitness") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Rotate and adjust size of x-axis labels
legend.key.size = unit(1, 'cm'),
legend.position = "right") +
scale_y_continuous(breaks = c(pretty(pm$fitness_value), 300)) # Add tick mark at 500
print(bg)
View(avg.DSM.Ctrl)
# Get unique combinations of Media, Infection, and Strain
combinations <- summary %>%
distinct(Media, Infection, Strain)
# Create data frames for each combination
for (i in 1:nrow(combinations)) {
strain <- combinations$Strain[i]
media <- combinations$Media[i]
infection <- combinations$Infection[i]
vector_name <- paste(strain, media, infection, sep = ".")
assign(vector_name, summary %>%
filter(Strain == strain, Media == media, Infection == infection) %>%
select(Time, OD600))
}
# Calculate the average OD600 for each time point for wt strains
wt_combinations <- combinations %>%
filter(grepl("WT", Strain))
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE) * 4) %>%
ungroup()
assign(avg_vector_name, avg_vector)
}
# Ensure non_wt_combinations is created correctly
non_wt_combinations <- combinations %>%
filter(!grepl("WT", Strain))
fitness_list <- list()
for (i in 1:nrow(non_wt_combinations)) {
strain <- non_wt_combinations$Strain[i]
media <- non_wt_combinations$Media[i]
infection <- non_wt_combinations$Infection[i]
non_wt_vector_name <- paste(strain, media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
fitness_vector_name <- paste(media, strain, infection, "fitness", sep = ".")
fitness_vector <- get(non_wt_vector_name)$OD600 - get(avg_vector_name)$avg_OD600
assign(fitness_vector_name, fitness_vector)
fitness_list[[fitness_vector_name]] <- fitness_vector
}
# Sum all fitness vectors into one data frame named pm
pm <- data.frame(
media = character(),
strain = character(),
infection = character(),
fitness_value = numeric()
)
for (name in names(fitness_list)) {
parts <- strsplit(name, "\\.")[[1]]
media <- parts[1]
strain <- parts[2]
infection <- parts[3]
fitness_value <- sum(fitness_list[[name]])
pm <- rbind(pm, data.frame(media = media, strain = strain, infection = infection, fitness_value = fitness_value))
}
# Create the media.strain.infection variable manually
pm$media.strain.infection <- paste(pm$media, pm$strain, pm$infection, sep = ".")
# Plot fitness
plot.new()
bg <- ggplot(pm, aes(x = media.strain.infection, y = fitness_value)) +
geom_bar(stat = "identity") +
labs(title = "Fitness effects of sporulation mutations", x = "Media.Strain.Infection", y = "Fitness") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Rotate and adjust size of x-axis labels
legend.key.size = unit(1, 'cm'),
legend.position = "right") +
scale_y_continuous(breaks = c(pretty(pm$fitness_value), 300)) # Add tick mark at 500
print(bg)
rm(list = ls())
setwd("C:/Users/parke/OneDrive - Indiana University/GitHub/ASG-fitness-effects/microplate_fitness_assay")
knitr::opts_knit$set(root.dir = "C:/Users/parke/OneDrive - Indiana University/GitHub/ASG-fitness-effects/microplate_fitness_assay/")
getwd()
#install.packages("tidyverse")
require("png")
require("dplyr")
library("tidyverse")
require("grid")
require("tibble")
require("knitr")
require("extrafont")
require("ggrepel");
require("gridExtra")
require("contrast")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) (sd(x)/mean(x))*100
#load data
data<-read.csv("./data/20250211OD600.csv")
design<-read.csv("./reference/20250211OD600Design.csv", header=FALSE)
#subset design file, "wells" will be strain plus treatment but I can update design file to include a separate column for both
media<-design[1:8,1:12]
strain<-design[9:16,1:12]
infection<-design[17:24, 1:12]
# Create custom labels
rows <- LETTERS[1:8]  # A to H
cols <- 1:12  # 1 to 12
custom_labels <- unlist(lapply(rows, function(row) paste0(row, cols)))
#convert to long
med.long <- as.data.frame(pivot_longer(media, cols = everything(),
names_to = "Well", values_to = "Media"))
stn.long <- as.data.frame(pivot_longer(strain, cols = everything(),
names_to = "Well", values_to = "Strain"))
inf.long <- as.data.frame(pivot_longer(infection, cols = everything(),
names_to = "Well", values_to = "Infection"))
# Prepare the OD data for merging
OD.long <- data %>%
pivot_longer(cols = -Time, names_to="Well", values_to="OD600")
str(OD.long)
#combine
OD.long$Media<-rep(med.long$Media, length.out=nrow(OD.long))
OD.long$Strain<-rep(stn.long$Strain, length.out=nrow(OD.long))
OD.long$Infection<-rep(inf.long$Infection, length.out=nrow(OD.long))
#filter out "Blanks"
summary<-OD.long[!apply(OD.long, 1, function(row) any(row=="Blank")), ]
#it worked!!
# Get unique combinations of Media, Infection, and Strain
combinations <- summary %>%
distinct(Media, Infection, Strain)
# Create data frames for each combination
for (i in 1:nrow(combinations)) {
strain <- combinations$Strain[i]
media <- combinations$Media[i]
infection <- combinations$Infection[i]
vector_name <- paste(strain, media, infection, sep = ".")
assign(vector_name, summary %>%
filter(Strain == strain, Media == media, Infection == infection) %>%
select(Time, OD600))
}
# Calculate the average OD600 for each time point for wt strains
wt_combinations <- combinations %>%
filter(grepl("WT", Strain))
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE) * 4) %>%
ungroup()
assign(avg_vector_name, avg_vector)
}
# Ensure non_wt_combinations is created correctly
non_wt_combinations <- combinations %>%
filter(!grepl("WT", Strain))
fitness_list <- list()
for (i in 1:nrow(non_wt_combinations)) {
strain <- non_wt_combinations$Strain[i]
media <- non_wt_combinations$Media[i]
infection <- non_wt_combinations$Infection[i]
non_wt_vector_name <- paste(strain, media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
fitness_vector_name <- paste(media, strain, infection, "fitness", sep = ".")
fitness_vector <- get(non_wt_vector_name)$OD600 - get(avg_vector_name)$avg_OD600
assign(fitness_vector_name, fitness_vector)
fitness_list[[fitness_vector_name]] <- fitness_vector
}
# Sum all fitness vectors into one data frame named pm
pm <- data.frame(
media = character(),
strain = character(),
infection = character(),
fitness_value = numeric()
)
for (name in names(fitness_list)) {
parts <- strsplit(name, "\\.")[[1]]
media <- parts[1]
strain <- parts[2]
infection <- parts[3]
fitness_value <- sum(fitness_list[[name]])
pm <- rbind(pm, data.frame(media = media, strain = strain, infection = infection, fitness_value = fitness_value))
}
# Create the media.strain.infection variable manually
pm$media.strain.infection <- paste(pm$media, pm$strain, pm$infection, sep = ".")
# Plot fitness
plot.new()
bg <- ggplot(pm, aes(x = media.strain.infection, y = fitness_value)) +
geom_bar(stat = "identity") +
labs(title = "Fitness effects of sporulation mutations", x = "Media.Strain.Infection", y = "Fitness") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Rotate and adjust size of x-axis labels
legend.key.size = unit(1, 'cm'),
legend.position = "right") +
scale_y_continuous(breaks = c(pretty(pm$fitness_value), 300)) # Add tick mark at 500
print(bg)
View(avg.DSM.Ctrl)
View(avg_vector)
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE)) %>%
ungroup()
assign(avg_vector_name, avg_vector)
}
rm(list = ls())
setwd("C:/Users/parke/OneDrive - Indiana University/GitHub/ASG-fitness-effects/microplate_fitness_assay")
knitr::opts_knit$set(root.dir = "C:/Users/parke/OneDrive - Indiana University/GitHub/ASG-fitness-effects/microplate_fitness_assay/")
getwd()
#install.packages("tidyverse")
require("png")
require("dplyr")
library("tidyverse")
require("grid")
require("tibble")
require("knitr")
require("extrafont")
require("ggrepel");
require("gridExtra")
require("contrast")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) (sd(x)/mean(x))*100
#load data
data<-read.csv("./data/20250211OD600.csv")
design<-read.csv("./reference/20250211OD600Design.csv", header=FALSE)
#subset design file, "wells" will be strain plus treatment but I can update design file to include a separate column for both
media<-design[1:8,1:12]
strain<-design[9:16,1:12]
infection<-design[17:24, 1:12]
# Create custom labels
rows <- LETTERS[1:8]  # A to H
cols <- 1:12  # 1 to 12
custom_labels <- unlist(lapply(rows, function(row) paste0(row, cols)))
#convert to long
med.long <- as.data.frame(pivot_longer(media, cols = everything(),
names_to = "Well", values_to = "Media"))
stn.long <- as.data.frame(pivot_longer(strain, cols = everything(),
names_to = "Well", values_to = "Strain"))
inf.long <- as.data.frame(pivot_longer(infection, cols = everything(),
names_to = "Well", values_to = "Infection"))
# Prepare the OD data for merging
OD.long <- data %>%
pivot_longer(cols = -Time, names_to="Well", values_to="OD600")
str(OD.long)
#combine
OD.long$Media<-rep(med.long$Media, length.out=nrow(OD.long))
OD.long$Strain<-rep(stn.long$Strain, length.out=nrow(OD.long))
OD.long$Infection<-rep(inf.long$Infection, length.out=nrow(OD.long))
#filter out "Blanks"
summary<-OD.long[!apply(OD.long, 1, function(row) any(row=="Blank")), ]
#it worked!!
# Get unique combinations of Media, Infection, and Strain
combinations <- summary %>%
distinct(Media, Infection, Strain)
# Create data frames for each combination
for (i in 1:nrow(combinations)) {
strain <- combinations$Strain[i]
media <- combinations$Media[i]
infection <- combinations$Infection[i]
vector_name <- paste(strain, media, infection, sep = ".")
assign(vector_name, summary %>%
filter(Strain == strain, Media == media, Infection == infection) %>%
select(Time, OD600))
}
# Calculate the average OD600 for each time point for wt strains
wt_combinations <- combinations %>%
filter(grepl("WT", Strain))
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE)) %>%
ungroup()
assign(avg_vector_name, avg_vector)
}
# Ensure non_wt_combinations is created correctly
non_wt_combinations <- combinations %>%
filter(!grepl("WT", Strain))
fitness_list <- list()
for (i in 1:nrow(non_wt_combinations)) {
strain <- non_wt_combinations$Strain[i]
media <- non_wt_combinations$Media[i]
infection <- non_wt_combinations$Infection[i]
non_wt_vector_name <- paste(strain, media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
fitness_vector_name <- paste(media, strain, infection, "fitness", sep = ".")
fitness_vector <- get(non_wt_vector_name)$OD600 - get(avg_vector_name)$avg_OD600
assign(fitness_vector_name, fitness_vector)
fitness_list[[fitness_vector_name]] <- fitness_vector
}
# Sum all fitness vectors into one data frame named pm
pm <- data.frame(
media = character(),
strain = character(),
infection = character(),
fitness_value = numeric()
)
for (name in names(fitness_list)) {
parts <- strsplit(name, "\\.")[[1]]
media <- parts[1]
strain <- parts[2]
infection <- parts[3]
fitness_value <- sum(fitness_list[[name]])
pm <- rbind(pm, data.frame(media = media, strain = strain, infection = infection, fitness_value = fitness_value))
}
# Create the media.strain.infection variable manually
pm$media.strain.infection <- paste(pm$media, pm$strain, pm$infection, sep = ".")
# Plot fitness
plot.new()
bg <- ggplot(pm, aes(x = media.strain.infection, y = fitness_value)) +
geom_bar(stat = "identity") +
labs(title = "Fitness effects of sporulation mutations", x = "Media.Strain.Infection", y = "Fitness") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Rotate and adjust size of x-axis labels
legend.key.size = unit(1, 'cm'),
legend.position = "right") +
scale_y_continuous(breaks = c(pretty(pm$fitness_value), 300)) # Add tick mark at 500
print(bg)
rm(list = ls())
setwd("./")
getwd()
#install.packages("tidyverse")
require("png")
require("dplyr")
library("tidyverse")
require("grid")
require("tibble")
require("knitr")
require("extrafont")
require("ggrepel");
require("gridExtra")
require("contrast")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) (sd(x)/mean(x))*100
#load data
data<-read.csv("../data/20250228OD600.csv")
design<-read.csv("../reference/20250228OD600Design.csv", header=FALSE)
#subset design file, "wells" will be strain plus treatment but I can update design file to include a separate column for both
media<-design[1:8,1:12]
strain<-design[9:16,1:12]
infection<-design[17:24, 1:12]
# Create custom labels
rows <- LETTERS[1:8]  # A to H
cols <- 1:12  # 1 to 12
custom_labels <- unlist(lapply(rows, function(row) paste0(row, cols)))
#convert to long
med.long <- as.data.frame(pivot_longer(media, cols = everything(),
names_to = "Well", values_to = "Media"))
stn.long <- as.data.frame(pivot_longer(strain, cols = everything(),
names_to = "Well", values_to = "Strain"))
inf.long <- as.data.frame(pivot_longer(infection, cols = everything(),
names_to = "Well", values_to = "Infection"))
# Prepare the OD data for merging
OD.long <- data %>%
pivot_longer(cols = -Time, names_to="Well", values_to="OD600")
str(OD.long)
#combine
OD.long$Media<-rep(med.long$Media, length.out=55392)
OD.long$Strain<-rep(stn.long$Strain, length.out=55392)
OD.long$Infection<-rep(inf.long$Infection, length.out=55392)
#filter out "Blanks"
summary<-OD.long[!apply(OD.long, 1, function(row) any(row=="Blank")), ]
#it worked!!
# Get unique combinations of Media, Infection, and Strain
combinations <- summary %>%
distinct(Media, Infection, Strain)
# Create data frames for each combination
for (i in 1:nrow(combinations)) {
strain <- combinations$Strain[i]
media <- combinations$Media[i]
infection <- combinations$Infection[i]
vector_name <- paste(strain, media, infection, sep = ".")
assign(vector_name, summary %>%
filter(Strain == strain, Media == media, Infection == infection) %>%
select(Time, OD600))
}
# Calculate the average OD600 for each time point for wt strains
wt_combinations <- combinations %>%
filter(grepl("WT", Strain))
for (i in 1:nrow(wt_combinations)) {
media <- wt_combinations$Media[i]
infection <- wt_combinations$Infection[i]
wt_vector_name <- paste("WT", media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
avg_vector <- get(wt_vector_name) %>%
group_by(Time) %>%
mutate(avg_OD600 = mean(OD600, na.rm = TRUE)) %>%
ungroup()
assign(avg_vector_name, avg_vector)
}
# Ensure non_wt_combinations is created correctly
non_wt_combinations <- combinations %>%
filter(!grepl("WT", Strain))
fitness_list <- list()
for (i in 1:nrow(non_wt_combinations)) {
strain <- non_wt_combinations$Strain[i]
media <- non_wt_combinations$Media[i]
infection <- non_wt_combinations$Infection[i]
non_wt_vector_name <- paste(strain, media, infection, sep = ".")
avg_vector_name <- paste("avg", media, infection, sep = ".")
fitness_vector_name <- paste(media, strain, infection, "fitness", sep = ".")
fitness_vector <- get(non_wt_vector_name)$OD600 - get(avg_vector_name)$avg_OD600
assign(fitness_vector_name, fitness_vector)
fitness_list[[fitness_vector_name]] <- fitness_vector
}
# Sum all fitness vectors into one data frame named pm
pm <- data.frame(
media = character(),
strain = character(),
infection = character(),
fitness_value = numeric()
)
for (name in names(fitness_list)) {
parts <- strsplit(name, "\\.")[[1]]
media <- parts[1]
strain <- parts[2]
infection <- parts[3]
fitness_value <- sum(fitness_list[[name]])
pm <- rbind(pm, data.frame(media = media, strain = strain, infection = infection, fitness_value = fitness_value))
}
# Create the media.strain.infection variable manually
pm$media.strain.infection <- paste(pm$media, pm$strain, pm$infection, sep = ".")
# Plot fitness
plot.new()
bg <- ggplot(pm, aes(x = media.strain.infection, y = fitness_value)) +
geom_bar(stat = "identity") +
labs(title = "Fitness effects of sporulation mutations", x = "Media.Strain.Infection", y = "Fitness") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Rotate and adjust size of x-axis labels
legend.key.size = unit(1, 'cm'),
legend.position = "right") +
scale_y_continuous(breaks = c(pretty(pm$fitness_value), 300)) # Add tick mark at 500
print(bg)
setwd("C:/Users/parke/OneDrive - Indiana University/GitHub/ASG-fitness-effects/microplate_fitness_assay/output")
ggsave("20250228_fitness.png", plot = bg, width = 10, height = 12, dpi = 300)
